<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: unnamed Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/** 
 *  SVGPan library 1.2.1
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the first g 
 * element), including the the library into any SVG adds the following capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com>. All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *    1. Redistributions of source code must retain the above copyright notice, this list of
 *       conditions and the following disclaimer.
 * 
 *    2. Redistributions in binary form must reproduce the above copyright notice, this list
 *       of conditions and the following disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION 
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)

/// <====
/// END OF CONFIGURATION 

var root = document.documentElement;

var state = 'none', svgRoot, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(typeof(svgRoot) == "undefined") {
		var g = null;

		g = root.getElementById("viewport");

		if(g == null)
			g = root.getElementsByTagName('g')[0];

		if(g == null)
			alert('Unable to obtain SVG root element');

		setCTM(g, g.getCTM());

		g.removeAttribute("viewBox");

		svgRoot = g;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 3600; // Chrome/Safari
	else
		delta = evt.detail / -90; // Mozilla

	var z = 1 + delta; // Zoom factor: 0.9/1.1

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg" 
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element 
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}

]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 324)">
<title>unnamed</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-324 725.8379,-324 725.8379,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="#000000" points="8,-208 8,-312 468,-312 468,-208 8,-208"/>
</g>
<!-- Type: cpu -->
<g id="node1" class="node">
<title>Type: cpu</title>
<polygon fill="#f8f8f8" stroke="#000000" points="459.5159,-304 16.4841,-304 16.4841,-216 459.5159,-216 459.5159,-304"/>
<text text-anchor="start" x="24.2422" y="-287.2" font-family="Times,serif" font-size="16.00" fill="#000000">Type: cpu</text>
<text text-anchor="start" x="24.2422" y="-271.2" font-family="Times,serif" font-size="16.00" fill="#000000">Time: Aug 4, 2018 at 2:53pm (JST)</text>
<text text-anchor="start" x="24.2422" y="-255.2" font-family="Times,serif" font-size="16.00" fill="#000000">Duration: 30.20s, Total samples = 24360ms (80.66%)</text>
<text text-anchor="start" x="24.2422" y="-239.2" font-family="Times,serif" font-size="16.00" fill="#000000">Showing nodes accounting for 24230ms, 99.47% of 24360ms total</text>
<text text-anchor="start" x="24.2422" y="-223.2" font-family="Times,serif" font-size="16.00" fill="#000000">Dropped 7 nodes (cum &lt;= 121.80ms)</text>
</g>
<!-- N1 -->
<g id="node1" class="node">
<title>N1</title>
<g id="a_node1"><a xlink:title="main.fib (23880ms)">
<polygon fill="#edd5d5" stroke="#b20100" points="623.9844,-80 424.0156,-80 424.0156,0 623.9844,0 623.9844,-80"/>
<text text-anchor="middle" x="524" y="-56.8" font-family="Times,serif" font-size="24.00" fill="#000000">main</text>
<text text-anchor="middle" x="524" y="-32.8" font-family="Times,serif" font-size="24.00" fill="#000000">fib</text>
<text text-anchor="middle" x="524" y="-8.8" font-family="Times,serif" font-size="24.00" fill="#000000">23880ms (98.03%)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node">
<title>N2</title>
<g id="a_node2"><a xlink:title="runtime.main (23880ms)">
<polygon fill="#edd5d5" stroke="#b20100" points="569.9922,-278 478.0078,-278 478.0078,-242 569.9922,-242 569.9922,-278"/>
<text text-anchor="middle" x="524" y="-265.6" font-family="Times,serif" font-size="8.00" fill="#000000">runtime</text>
<text text-anchor="middle" x="524" y="-257.6" font-family="Times,serif" font-size="8.00" fill="#000000">main</text>
<text text-anchor="middle" x="524" y="-249.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 23880ms (98.03%)</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node">
<title>N5</title>
<g id="a_node5"><a xlink:title="main.main (23880ms)">
<polygon fill="#edd5d5" stroke="#b20100" points="569.9922,-166 478.0078,-166 478.0078,-130 569.9922,-130 569.9922,-166"/>
<text text-anchor="middle" x="524" y="-153.6" font-family="Times,serif" font-size="8.00" fill="#000000">main</text>
<text text-anchor="middle" x="524" y="-145.6" font-family="Times,serif" font-size="8.00" fill="#000000">main</text>
<text text-anchor="middle" x="524" y="-137.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 23880ms (98.03%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N5 -->
<g id="edge2" class="edge">
<title>N2&#45;&gt;N5</title>
<g id="a_edge2"><a xlink:title="runtime.main &#45;&gt; main.main (23880ms)">
<path fill="none" stroke="#b20100" stroke-width="5" d="M524,-241.5055C524,-223.7282 524,-196.6184 524,-176.1587"/>
<polygon fill="#b20100" stroke="#b20100" stroke-width="5" points="528.3751,-176.1503 524,-166.1504 519.6251,-176.1504 528.3751,-176.1503"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="runtime.main &#45;&gt; main.main (23880ms)">
<text text-anchor="middle" x="551.4189" y="-186.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 23880ms</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node">
<title>N3</title>
<g id="a_node3"><a xlink:title="runtime.duffcopy (350ms)">
<polygon fill="#edeceb" stroke="#b2aea5" points="719.6609,-59 642.3391,-59 642.3391,-21 719.6609,-21 719.6609,-59"/>
<text text-anchor="middle" x="681" y="-47" font-family="Times,serif" font-size="10.00" fill="#000000">runtime</text>
<text text-anchor="middle" x="681" y="-37" font-family="Times,serif" font-size="10.00" fill="#000000">duffcopy</text>
<text text-anchor="middle" x="681" y="-27" font-family="Times,serif" font-size="10.00" fill="#000000">350ms (1.44%)</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node">
<title>N4</title>
<g id="a_node4"><a xlink:title="runtime.morestack (360ms)">
<polygon fill="#edeceb" stroke="#b2aea5" points="720.9922,-278 641.0078,-278 641.0078,-242 720.9922,-242 720.9922,-278"/>
<text text-anchor="middle" x="681" y="-265.6" font-family="Times,serif" font-size="8.00" fill="#000000">runtime</text>
<text text-anchor="middle" x="681" y="-257.6" font-family="Times,serif" font-size="8.00" fill="#000000">morestack</text>
<text text-anchor="middle" x="681" y="-249.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 360ms (1.48%)</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node6" class="node">
<title>N6</title>
<g id="a_node6"><a xlink:title="runtime.newstack (360ms)">
<polygon fill="#edeceb" stroke="#b2aea5" points="720.9922,-166 641.0078,-166 641.0078,-130 720.9922,-130 720.9922,-166"/>
<text text-anchor="middle" x="681" y="-153.6" font-family="Times,serif" font-size="8.00" fill="#000000">runtime</text>
<text text-anchor="middle" x="681" y="-145.6" font-family="Times,serif" font-size="8.00" fill="#000000">newstack</text>
<text text-anchor="middle" x="681" y="-137.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 360ms (1.48%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N6 -->
<g id="edge3" class="edge">
<title>N4&#45;&gt;N6</title>
<g id="a_edge3"><a xlink:title="runtime.morestack &#45;&gt; runtime.newstack (360ms)">
<path fill="none" stroke="#b2aea5" d="M681,-241.5055C681,-223.7282 681,-196.6184 681,-176.1587"/>
<polygon fill="#b2aea5" stroke="#b2aea5" points="684.5001,-176.1503 681,-166.1504 677.5001,-176.1504 684.5001,-176.1503"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="runtime.morestack &#45;&gt; runtime.newstack (360ms)">
<text text-anchor="middle" x="701.4189" y="-186.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 360ms</text>
</a>
</g>
</g>
<!-- N5&#45;&gt;N1 -->
<g id="edge1" class="edge">
<title>N5&#45;&gt;N1</title>
<g id="a_edge1"><a xlink:title="main.main &#45;&gt; main.fib (23880ms)">
<path fill="none" stroke="#b20100" stroke-width="5" d="M524,-129.6793C524,-118.8316 524,-104.5069 524,-90.4979"/>
<polygon fill="#b20100" stroke="#b20100" stroke-width="5" points="528.3751,-90.4072 524,-80.4072 519.6251,-90.4073 528.3751,-90.4072"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="main.main &#45;&gt; main.fib (23880ms)">
<text text-anchor="middle" x="551.4189" y="-100.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 23880ms</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N3 -->
<g id="edge4" class="edge">
<title>N6&#45;&gt;N3</title>
<g id="a_edge4"><a xlink:title="runtime.newstack &#45;&gt; runtime.duffcopy (350ms)">
<path fill="none" stroke="#b2aea5" d="M681,-129.6793C681,-113.1256 681,-88.4752 681,-69.2054"/>
<polygon fill="#b2aea5" stroke="#b2aea5" points="684.5001,-69.1391 681,-59.1391 677.5001,-69.1392 684.5001,-69.1391"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="runtime.newstack &#45;&gt; runtime.duffcopy (350ms)">
<text text-anchor="middle" x="701.4189" y="-100.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 350ms</text>
</a>
</g>
</g>
</g>
</g></svg>
